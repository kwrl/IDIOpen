class UserProfile(object):
    def __init__(self, request, pw=None, pi=None, email=None):
        self.pwForm = pw or PasswordForm(instance=request.user);
        self.piForm = pi or PIForm(instance=request.user);
        self.email = email or EmailForm(instance=request.user);
        self.forms = [self.pwForm, self.piForm, self.email];
        messages.error(request, 'Validation failed')

    def getDict(self):
        a = {};
        for form in self.forms:
            a[form.contextName] = form;
        return a;

def retProfile(request, userProfile):
    email = request.user.email;
    messages = [];
    invites = Invite.objects.filter(email=email).filter(is_member = False)
    context = {'invites' : invites,
               'messages':messages,
               'user': request.user,
               'have_team': is_on_team(request),
               }

    context.update(userProfile.getDict());

    #return HttpResponse(notification_list[0].confirmed)
    return render(request, 'userregistration/profile.html', context);

# EOF

